function isodraw_plot(dim, Mchoices, pic_config, filename, include_title)
 
    %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    % task1_plot Produce iso-draw curves figures
    %
    % Inputs
    % dim - dimension of parameter region
    % Mchocies - vector of choices for M
    % pic_config - object generated by pic_config.m
    % filename - string filename
    % include_title - include a title (used for slides)
    %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 
    % Unspool
    fig_fontsize = pic_config.fontsize;
    fig_width = pic_config.width;
    fig_height = pic_config.height;
    pic_dir = pic_config.directory;
 
    colormat = {'red', 'blue', 'green', 'cyan', 'black'};
 
    % Figure 2
    figure('Name', 'Isodraw all')
 
    string = strings(1, size(Mchoices, 1));
 
    for j = 1:size(Mchoices, 1)
        fplot(@(x)isodraw_calc(dim, x, Mchoices(j)), 'LineWidth', 2, 'Color', colormat{j})
        string(j) = ['M = ' num2str(Mchoices(j))];
        hold on;
    end
    % 45 degree line
    fplot(@(x) x, '--', 'Color', 'black', 'LineWidth', 2)
    xlim([- 0.002 1])
    ylim([0 1])
 
    % If multiple plots show legend
    if size(Mchoices, 1) > 1
        leg = legend(string);
        set(leg, 'Interpreter', 'latex')
        if include_title == 1
            title(['Isodraw curves; d = ' num2str(dim)])
        end
    end
 
    xlabel('\delta', 'fontsize', 18)
    ylabel('\epsilon', 'fontsize', 18)
 
 
    latex_fig(fig_fontsize, fig_width, fig_height);
    tightfig();
    set(gca, 'Layer', 'top')
    print(gcf, '-depsc2', fullfile(pic_dir, [filename '.eps']))
end


